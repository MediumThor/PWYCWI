import React from 'react';
import "src/styles/Home.module.scss";
import styled from 'styled-components';
import Wrapper from 'src/components/Sections/Wrapper';
import styles from 'src/styles/Home.module.scss'
import Head from 'next/head'
import Image from 'next/image'
import { Parallax, Background } from "react-parallax";

import ParallaxBG2 from "src/components/SmoothScroll/ParallaxBG2.jsx"

import { useState, useEffect } from 'react'
import { ethers, BigNumber } from "ethers"
import { Mainnet, DAppProvider, useEtherBalance, useEthers, Config, Goerli } from '@usedapp/core'
import Vault from '../../abi/Vault.json';
import Shiva from "src/abi/Shiva.json";
import { SHIVA_ADDRESS, VAULT_ADDRESS } from '../addresses/addresses';

import Trails2 from "src/components/Spring/trails2.tsx"
import { SectionContentBlock } from '../base2/base';
import StakeSection from "src/Bonsai/StakeSection.tsx"
import { Link } from 'react-scroll';
import Button from "src/components/CustomButtons/Button";
import SmallButton from "src/components/CustomButtons/SmallButton.js";
import TokenCardWeekly from 'src/components/tokenCards/tokenCardWeekly.js';
import TokenCardMonthly from "src/components/tokenCards/tokenCardMonthly.js"
import CheckoutWithStripe from 'src/components/StripeCheckout.js';


const Section1Styled = styled.div`
  background-color: black;
  .active {
    border-bottom: 10px solid white;
  }
`;







export default function Section1() {
  const { account, activateBrowserWallet, deactivate, chainId } = useEthers()
  const userBalance = useEtherBalance(account)
  const [address, setAddress] = useState('')
  const [disabled, setDisabled] = useState(false)
  const [totalSupply, setTotalSupply] = useState(false)



  async function claim() {
    if (window.ethereum) {
      const provider = new ethers.providers.Web3Provider(window.ethereum);
      const signer = provider.getSigner();
      const contract = new ethers.Contract(
        VAULT_ADDRESS,
        Vault,
        signer
      );
      try {
        const response = await contract.claim()


        console.log('response: ', response);
        console.log(claim);
        alert("claimed " + (allocation) + " from Vault")

      } catch (err) {
        console.log("error: ", err)
      }
    }
  };


  return (



    <Section1Styled id="section1">
      <SectionContentBlock>
        <Wrapper>

          <div >




            <Head >
              <title>Full Circle Compost</title>
              <meta name="description" content="Generated by create next app" />
              <link rel="icon" href="/favicon.ico" />
            </Head>


            <main className={styles.main}>

              <div className={styles.tokengrid2}>

                <h1>Residental Service Includes:</h1>

                <p>A clean, Food Safe, five gallon bucket (with lid) delivered to your home either once a month (every four weeks) or once every other week, in exchange for your full/semi-full bucket.
                  A BPI-certified compostable liner inside each bucket, to help keep your buckets clean.
                  About 32 ounces of wood shavings in the bottom of each bucket, to help absorb moisture and control odor.</p>
                <p>A free, 1-cup sample bag of our finely sifted, premium compost with your first bucket.
                  An up to 50% (or more) reduction in the amount of trash your household produces each week.
                  A 20% discount on any of our finely sifted, premium compost you may purchase from us (per our Compost Discount Program).</p>
                <p>The opportunity to earn a (1) gallon bag of our finely sifted, premium compost for every new subscriber you refer to us (per our Referral Rewards Program).</p>
                <p>The opportunity to earn a (1) cubic foot bag of our finely sifted, premium compost for every (500) pounds of Acceptable organic waste you provide us (per our Waste Reduction Rewards Program).</p>
              </div>
              <div className={styles.tokengrid}>


                <TokenCardWeekly />
                <TokenCardMonthly />




              </div>


              <div className={styles.container}>

                <div className={styles.grid}>



                  <SmallButton color="transparent"
                  >
                    <Link to="section2" className={styles.smallcard1} spy={false} smooth={true} duration={1000}>
                      <h2>Info </h2>

                    </Link>
                  </SmallButton>




                  <SmallButton color="transparent"
                  >
                    <Link to="section4" className={styles.smallcard2} spy={false} smooth={true} duration={1000}>
                      <h2>Contact </h2>
                      <p> </p>
                    </Link>
                  </SmallButton>

                  {/**    <SmallButton color="transparent"

                  >
                    <Link to="section3" className={styles.smallcard3} spy={false} smooth={true} duration={1000}>
                      <h2>Mint</h2>
                      <p>  </p>
                    </Link>
                  </SmallButton>

                  <SmallButton color="transparent"
                    target="_blank"
                  >
                    <Link to="section3" className={styles.smallcard4} spy={false} smooth={true} duration={1000}>
                      <h2>Stake</h2>
                      <p>

                      </p>
                    </Link>
                  </SmallButton> */}

                </div>

              </div>

              <CheckoutWithStripe />
            </main>




            <footer className={styles.footer}>

              <p className={styles.description}>
              </p>


            </footer>

          </div>

        </Wrapper>
      </SectionContentBlock>
    </Section1Styled>
  );
}